<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="VideoMapper">
	<resultMap id="videoList" type="video">
		<result property="recid" column="recid"/>
		<result property="vdoId" column="vdoId"/>
		<result property="vdoTitle" column="vdoTitle"/>
		<result property="vdoType" column="vdoType"/>
		<result property="language" column="language"/>
		<result property="productionDate" column="productionDate"/>
		<result property="runtime" column="runtime"/>
		<result property="scnCnt" column="scnCnt"/>
	</resultMap>
	
	<!-- <select id="goBackToVideoList" resultMap="videoList" parameterType="vo"><![CDATA[
	select YY.seq as recid
		 , YY.MUL_ID as vdoId
		 , YY.MUL_TITLE as vdoTitle
		 , YY.TITLE_ETC as vdoType
		 , YY.LANGUAGE as language
		 , YY.MUL_YEAR as productionDate
		 , YY.RUNTIME as runtime
		 , (select count(*) from scene_manage where video_id=YY.MUL_ID) as scnCnt
	  from (select seq  from (select row_number() over (order by MUL_ID ASC) as seq, MUL_ID from MULTI_NEW) X where X.MUL_ID=#{vdoId}) XX,
		  (select row_number() over (order by MUL_ID ASC) as seq, Y.* from MULTI_NEW Y order by MUL_ID asc) YY
	 where FLOOR((YY.seq-1)/#{limit}) >= FLOOR(XX.seq/#{limit}) and FLOOR((YY.seq-1)/#{limit}) < (FLOOR(XX.seq/#{limit})+1)
	]]></select> -->
	
	
	<select id="getVideoTotalCount" resultType="Integer" parameterType="vo">
	 SELECT count(*) FROM (
	 	select X.* from (
			select A.MUL_ID as vdoId
				, A.MUL_TITLE as vdoTitle
				, (select code_nm from CODEINFO where div_id = 'A01' and code = B.PATTEN_CLSS) as vdoType
				, B.NATION_CLSS as language
				, A.MUL_YEAR as productionDate
				, A.RUNTIME as runtime
				, (select count(*) from scene_manage where video_id=A.MUL_ID) AS scnCnt
			 FROM MULTI_NEW A, MOVIE_SE B, MULTI_MOVIE_REL C
			 <where>
			 	A.MUL_ID = C.MUL_ID
			 	and B.MOVIE_ID = C.MOVIE_ID
			 	and B.MOVIE_SEQ = C.MOVIE_SEQ
			 	<if test='viewOnlyHavingScene != null and viewOnlyHavingScene == "y"'>
				and (select count(*) from scene_manage where video_id=A.MUL_ID)  > 0
				</if>
			 </where>
		) X
		<where>
			<if test='search != null'>
				<foreach collection="search" item="searchMap" separator=" or ">
					<if test="searchMap.operator == 'begins'">
					${searchMap.field} like #{searchMap.value}||'%'
					</if>
					<if test="searchMap.operator == 'is'">
					${searchMap.field} = #{searchMap.value}
					</if>
					<if test="searchMap.operator == 'ends'">
					${searchMap.field} like '%'||#{searchMap.value}
					</if>
					<if test="searchMap.operator == 'contains'">
					${searchMap.field} like '%'||#{searchMap.value}||'%'
					</if>
					<if test="searchMap.operator == 'in'">
					${searchMap.field} in (#{searchMap.value})
					</if>
				</foreach>
			</if>
		</where>
	)
	</select>
	<select id="getVideoList" resultMap="videoList" parameterType="vo">
	select * from (
		SELECT row_number() over ( order by
			<choose>
			<when test='sort !=null'>			
				<foreach collection="sort" item="sortMap" separator=",">
				${sortMap.field} ${sortMap.direction}
				</foreach>
			</when><otherwise>
				vdoId ASC
			</otherwise></choose>
		) as recid, X.* from (
		select A.MUL_ID as vdoId
			, A.MUL_TITLE as vdoTitle
			, (select code_nm from CODEINFO where div_id = 'A01' and code = B.PATTEN_CLSS) as vdoType
			, B.NATION_CLSS as language
			, A.MUL_YEAR as productionDate
			, A.RUNTIME as runtime
			, (select count(*) from scene_manage where video_id=A.MUL_ID) AS scnCnt
		 FROM MULTI_NEW A, MOVIE_SE B, MULTI_MOVIE_REL C
		 <where>
		 	A.MUL_ID = C.MUL_ID
		 	and B.MOVIE_ID = C.MOVIE_ID
		 	and B.MOVIE_SEQ = C.MOVIE_SEQ
		 	<if test='viewOnlyHavingScene != null and viewOnlyHavingScene == "y"'>
			and (select count(*) from scene_manage where video_id=A.MUL_ID)  > 0
			</if>
		 </where>
		) X
		<where>
			<if test='search != null'>
				<foreach collection="search" item="searchMap" separator=" OR ">
					<if test="searchMap.operator == 'begins'">
					${searchMap.field} like #{searchMap.value}||'%'
					</if>
					<if test="searchMap.operator == 'is'">
					${searchMap.field} = #{searchMap.value}
					</if>
					<if test="searchMap.operator == 'ends'">
					${searchMap.field} like '%'||#{searchMap.value}
					</if>
					<if test="searchMap.operator == 'contains'">
					${searchMap.field} like '%'||#{searchMap.value}||'%'
					</if>
					<if test="searchMap.operator == 'in'">
					${searchMap.field} in (#{searchMap.value})
					</if>
				</foreach>
			</if>
			
		</where>
	)
		<where>
			<if test='pageSize !=0'><![CDATA[
			recid >= #{page} and recid <= #{pageSize}
			]]></if>
		</where>
	</select>
	<select id="findVideo" resultMap="videoList" parameterType="String">
	select A.MUL_ID as vdoId
		, A.MUL_TITLE as vdoTitle
		, (select code_nm from CODEINFO where div_id = 'A01' and code = B.PATTEN_CLSS) as vdoType
		, B.NATION_CLSS as language
		, A.MUL_YEAR as productionDate
		, A.RUNTIME as runtime
		, (select count(*) from scene_manage where video_id=A.MUL_ID) AS scnCnt
	 FROM MULTI_NEW A, MOVIE_SE B, MULTI_MOVIE_REL C
		<where>
		A.MUL_ID = C.MUL_ID
	 	and B.MOVIE_ID = C.MOVIE_ID
	 	and B.MOVIE_SEQ = C.MOVIE_SEQ
		<if test='_parameter != null'>
		and C.MUL_ID = #{id}
		</if>
		</where>
	</select>
	<select id="findVideoFile" resultType="String" parameterType="vo">
	 select a.sel from (
	 	select MULTI_FILE_PATH || '\' || MULTOR_NM as sel
	 	  from MULTI_FILE A
	 	 where MUL_ID = #{vdoId}
	 	   and MULTOR_NM like '%mp4'
	 	   and USE_CLSS in (2,1)
	 	 order by USE_CLSS desc, CREATE_DATE desc
	  ) A
	  where rownum=1
	</select>
	<select id="getMaxRuntime" resultType="Integer">
	 SELECT max(B.RUNTIME) FROM MULTI_NEW B
	</select>	
</mapper>
