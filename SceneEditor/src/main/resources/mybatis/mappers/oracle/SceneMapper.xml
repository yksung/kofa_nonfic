<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SceneMapper">
	<resultMap id="sceneList" type="scene">
		<result property="recid" column="recid"/>
		<result property="scnId" column="scnId"/>
		<result property="vdoId" column="vdoId"/>
		<result property="vdoNm" column="vdoNm"/>
		<result property="scnStartCd" column="scnStartCd"/>
		<result property="scnEndCd" column="scnEndCd"/>
		<result property="updDtime" column="updDtime"/>
		<result property="editor" column="editor"/>
		<result property="eventLClasCd" column="eventLClasCd"/>
		<result property="eventSClasCd" column="eventSClasCd"/>
		<result property="eventNm" column="eventNm"/>
		<result property="eventPrd" column="eventPrd"/>
		<result property="domAbr" column="domAbr"/>
		<result property="cntryCd" column="cntryCd"/>
		<result property="eventPlace" column="eventPlace"/>
		<result property="realPlace" column="realPlace"/>
		<result property="latitude" column="latitude"/>
		<result property="longitude" column="longitude"/>
		<result property="celebrity1" column="celebrity1"/>
		<result property="celebrity2" column="celebrity2"/>
		<result property="celebrity3" column="celebrity3"/>
		<result property="description" column="description"/>
		<result property="narration" column="narration"/>
		<result property="subtitles" column="subtitles"/>
		<result property="summary" column="summary"/>
		<result property="keyword" column="keyword"/>
		<result property="note" column="note"/>
	</resultMap>
	
	<select id="getNewScnId" resultType="Integer">
	select max(SCN_ID)+1 from SCENE_MANAGE
	</select>
	
	<select id="getSceneList" resultMap="sceneList" parameterType="vo">
	<choose>
		<when test='sort !=null'>
		select rownum as recid
			 , trim(SCN_ID) as scnId
			 , trim(VIDEO_ID) as vdoId
			 , (select MUL_TITLE from MULTI_NEW where MUL_ID=A.VIDEO_ID) as vdoNm
			 , SCN_START_CD as scnStartCd
			 , SCN_END_CD as scnEndCd
			 , UPD_DTIME as updDtime
			 , EDITOR as editor
			 , EVENT_LCLS as eventLClasCd
			 , EVENT_SCLS as eventSClasCd
			 , EVENT_NM as eventNm
			 , trim(EVENT_PRD) as eventPrd
			 , trim(DOM_ABR) as domAbr
			 , trim(CNTRY_CD) as cntryCd
			 , EVENT_PLACE as eventPlace
			 , REAL_PLACE as realPlace
			 , LATITUDE as latitude
			 , LONGITUDE as longitude
			 , CELEBRITY1 as celebrity1
			 , CELEBRITY2 as celebrity2
			 , CELEBRITY3 as celebrity3
			 , DESCRIPTION as description
			 , NARRATION as narration
			 , SUBTITLES as subtitles
			 , SUMMARY as summary
			 , KEYWORD as keyword
			 , NOTE as note
		   FROM SCENE_MANAGE A
		  WHERE VIDEO_ID = #{vdoId}
		  order by	
			<foreach collection="sort" item="sortMap" separator=",">
		    ${sortMap.field} ${sortMap.direction}
			</foreach>
		</when><otherwise>
		select row_number() over (ORDER BY TO_NUMBER(SUBSTR("SCN_START_CD",0,INSTR("SCN_START_CD",':')-1)) ASC, TO_NUMBER(SUBSTR("SCN_START_CD",INSTR("SCN_START_CD",':')+1)) ASC) as recid
			 , trim(SCN_ID) as scnId
			 , trim(VIDEO_ID) as vdoId
			 , (select MUL_TITLE from MULTI_NEW where MUL_ID=A.VIDEO_ID) as vdoNm
			 , SCN_START_CD as scnStartCd
			 , SCN_END_CD as scnEndCd
			 , UPD_DTIME as updDtime
			 , EDITOR as editor
			 , EVENT_LCLS as eventLClasCd
			 , EVENT_SCLS as eventSClasCd
			 , EVENT_NM as eventNm
			 , trim(EVENT_PRD) as eventPrd
			 , trim(DOM_ABR) as domAbr
			 , trim(CNTRY_CD) as cntryCd
			 , EVENT_PLACE as eventPlace
			 , REAL_PLACE as realPlace
			 , LATITUDE as latitude
			 , LONGITUDE as longitude
			 , CELEBRITY1 as celebrity1
			 , CELEBRITY2 as celebrity2
			 , CELEBRITY3 as celebrity3
			 , DESCRIPTION as description
			 , NARRATION as narration
			 , SUBTITLES as subtitles
			 , SUMMARY as summary
			 , KEYWORD as keyword
			 , NOTE as note
		   FROM SCENE_MANAGE A
		   WHERE VIDEO_ID = #{vdoId}
		</otherwise></choose>
	 </select>
	 <select id="findScene" parameterType="vo" resultMap="sceneList">
	 SELECT /*+ INDEX(scene_manage, SCENE_MANAGE_PK) */
	 	ROWNUM as recid
	 	,trim(SCN_ID) as scnId
		,trim(VIDEO_ID) as vdoId
		,(select MUL_TITLE from MULTI_NEW where MUL_ID=A.VIDEO_ID) as vdoNm
		,SCN_START_CD as scnStartCd
		,SCN_END_CD as scnEndCd
		,UPD_DTIME as updDtime
		,EDITOR as editor
		,EVENT_LCLS as eventLClasCd
		,EVENT_SCLS as eventSClasCd
		,EVENT_NM as eventNm
		,trim(EVENT_PRD) as eventPrd
		,trim(DOM_ABR) as domAbr
		,trim(CNTRY_CD) as cntryCd
		,EVENT_PLACE as eventPlace
		,REAL_PLACE as realPlace
		,LATITUDE as latitude
		,LONGITUDE as longitude
		,CELEBRITY1 as celebrity1
		,CELEBRITY2 as celebrity2
		,CELEBRITY3 as celebrity3
		,DESCRIPTION as description
		,NARRATION as narration
		,SUBTITLES as subtitles
		,SUMMARY as summary
		,KEYWORD as keyword
		,NOTE as note
	   FROM SCENE_MANAGE A
	   <where>
	   <choose>
	   	<when test="direction == 1"><![CDATA[
	   	VIDEO_ID = #{vdoId} and SCN_ID = ( select /*+ INDEX_ASC(scene_manage, IDX_SCN_ID) */ min(SCN_ID) from SCENE_MANAGE where SCN_ID > #{scnId} ) 
	   	]]></when>
	   	<when test="direction == -1"><![CDATA[
	   	VIDEO_ID = #{vdoId} and SCN_ID = ( select /*+ INDEX_DESC(scene_manage, IDX_SCN_ID) */ max(SCN_ID) from SCENE_MANAGE where SCN_ID < #{scnId} ) 
	   	]]></when>
	   	<otherwise>
	   	SCN_ID = #{scnId} AND VIDEO_ID = #{vdoId}
	   	</otherwise>
	   </choose>
	   </where>
	 </select>
	 <update id="updateScene" parameterType="vo">
	 update SCENE_MANAGE
	    set SCN_START_CD = #{scnStartCd},
		    SCN_END_CD = #{scnEndCd},
		    UPD_DTIME = sysdate,
		    EDITOR = #{editor},
		    EVENT_LCLS = #{eventLClasCd, jdbcType=VARCHAR},
		    EVENT_NM = #{eventNm, jdbcType=VARCHAR},
		    EVENT_PRD = #{eventPrd, jdbcType=VARCHAR},
		    DOM_ABR = #{domAbr},
		    CNTRY_CD = #{cntryCd, jdbcType=CHAR},
		    EVENT_PLACE = #{eventPlace, jdbcType=VARCHAR},
		    REAL_PLACE = #{realPlace, jdbcType=VARCHAR}, 
		    LATITUDE = #{latitude, jdbcType=FLOAT},
		    LONGITUDE = #{longitude, jdbcType=FLOAT},
		    CELEBRITY1 = #{celebrity1, jdbcType=VARCHAR},
		    CELEBRITY2 = #{celebrity2, jdbcType=VARCHAR},
		    CELEBRITY3 = #{celebrity3, jdbcType=VARCHAR},
		    DESCRIPTION = #{description, jdbcType=CLOB},
		    NARRATION = #{narration, jdbcType=CLOB},
		    SUBTITLES = #{subtitles, jdbcType=CLOB},
		    SUMMARY = #{summary, jdbcType=VARCHAR},
		    KEYWORD = #{keyword, jdbcType=VARCHAR},
		    NOTE = #{note, jdbcType=CLOB}
	  where SCN_ID = #{scnId}
	    and VIDEO_ID = #{vdoId}
	</update>
	<insert id="insertScene" useGeneratedKeys="true" keyProperty="SCN_ID" parameterType="scene">
	INSERT INTO SCENE_MANAGE (
		SCN_ID,
		VIDEO_ID,
	 	SCN_START_CD,
	    SCN_END_CD,
	    UPD_DTIME,
	    EDITOR,
	    EVENT_LCLS,
	    EVENT_NM,
	    EVENT_PRD,
	    DOM_ABR,
	    CNTRY_CD,
	    EVENT_PLACE,
	    REAL_PLACE,
	    LATITUDE,
	    LONGITUDE,
	    CELEBRITY1,
	    CELEBRITY2,
	    CELEBRITY3,
	    DESCRIPTION,
	    NARRATION,
	    SUBTITLES,
	    SUMMARY,
	    KEYWORD,
	    NOTE
	) VALUES (
		(select max(SCN_ID)+1 from SCENE_MANAGE),
	 	#{vdoId},
	 	#{scnStartCd},
	 	#{scnEndCd},
	 	sysdate,
	 	#{editor},
	 	#{eventLClasCd, jdbcType=VARCHAR},
	 	#{eventNm, jdbcType=VARCHAR},
	 	#{eventPrd, jdbcType=VARCHAR},
	 	#{domAbr},
	 	#{cntryCd, jdbcType=CHAR},
	 	#{eventPlace, jdbcType=VARCHAR},
	 	#{realPlace, jdbcType=VARCHAR},
	 	#{latitude, jdbcType=FLOAT},
	 	#{longitude, jdbcType=FLOAT},
	 	#{celebrity1, jdbcType=VARCHAR},
	 	#{celebrity2, jdbcType=VARCHAR},
	 	#{celebrity3, jdbcType=VARCHAR},
	 	#{description, jdbcType=CLOB},
	 	#{narration, jdbcType=CLOB},
	 	#{subtitles, jdbcType=CLOB},
	 	#{summary, jdbcType=VARCHAR},
	 	#{keyword, jdbcType=VARCHAR},
	 	#{note, jdbcType=CLOB}
	)
	</insert>
	<delete id="deleteScene" parameterType="vo">
	 delete from SCENE_MANAGE
	  where SCN_ID = #{scnId}
	    and VIDEO_ID = #{vdoId}
	</delete>
</mapper>
